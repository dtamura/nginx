apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
spec:
  revisionHistoryLimit: 5
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 5
      maxUnavailable: 0
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
      annotations:
        ad.datadoghq.com/nginx-container.check_names: '["nginx"]'
        ad.datadoghq.com/nginx-container.init_configs: "[{}]"
        ad.datadoghq.com/nginx-container.instances: '[{"nginx_status_url": "http://%%host%%:%%port%%/nginx_status"}]'
        ad.datadoghq.com/nginx-container.logs: '[{"source": "nginx", "service": "frontend"}]'
    spec:
      terminationGracePeriodSeconds: 30
      containers:
        - name: nginx-container
          image: asia.gcr.io/dtamura-service01/simple-nginx:latest
          ports:
            - containerPort: 8080
          env:
            - name: DATADOG_TRACE_AGENT_HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
          readinessProbe:
            initialDelaySeconds: 5
            periodSeconds: 3
            failureThreshold: 5
            httpGet:
              path: /nginx_status
              port: 8080
              scheme: HTTP
              httpHeaders:
                - name: Host
                  value: localhost
          lifecycle:
            preStop:
              exec:
                # command: ["/bin/sh", "-c", "sleep 15; /usr/sbin/nginx -s quit; sleep 5"]
                command:
                  [
                    "/bin/sh",
                    "-c",
                    "nginx -s quit; while killall -0 nginx; do sleep 1; done",
                  ]
          imagePullPolicy: Always
          resources:
            requests:
              cpu: 100m
              memory: 200Mi
            limits:
              cpu: 100m
              memory: 200Mi
          volumeMounts:
            - name: default-conf
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: default.conf
              readOnly: true
            - name: nginx-conf
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
              readOnly: true
            - name: dd-config
              mountPath: /etc/nginx/dd-config.json.in
              subPath: dd-config.json.in
              readOnly: true
      volumes:
        - name: default-conf
          configMap:
            name: default-conf
        - name: nginx-conf
          configMap:
            name: nginx-conf
        - name: dd-config
          configMap:
            name: dd-config
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: nginx-pdb
spec:
  maxUnavailable: 50%
  selector:
    matchLabels:
      app: nginx
